/*main*/

  a{
    outline: 0;
  }
  /*no text selection*/
    body{
      -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
      -webkit-focus-ring-color: rgba(255, 255, 255, 0);
      outline: none;

     /* -moz-user-select: none;
      -o-user-select: none;
      -khtml-user-select: none;
      -webkit-user-select: none;
      user-select: none;
      resize: none;

      -webkit-text-size-adjust: none;*/
    }
  /*text selection only for inputs*/
    input, textarea {
      /*-moz-user-select: text;
      -o-user-select: text;
      -khtml-user-select: text;
      -webkit-user-select: text;
      user-select: text;
      resize: none;*/
    }

  img {
    border: 0;
    vertical-align: top;
    max-width: 100%;
  }

    a:focus,
    a:link,
    a:visited,
    a:active,
    a:hover{
      cursor: pointer;
      outline: none;
    }
    button,
    button:focus,
    button:hover{
      outline:none !important;
    }
  .origin-styles.row,
  .origin-styles .row{
    margin-left: 0;
    margin-right: 0;
  }
  section{
    margin:30px 0;
  }
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
  .content-container{
    background: #ffffff;
    @include border-radius(4px);
  }

[type="reset"], [type="submit"], button, html [type="button"] {
  -webkit-appearance:none !important;
  -moz-appearance: none !important;
}
/*end main*/

/*global classes*/
  .nowrap{
    white-space: nowrap;
  }
  //font-size global classes
  @for $i from 1 through 30 {
    .font.s#{$i} { font-size: 1px * $i; }
  }

  //text align global classes
  .align-center {
    text-align: center;
  }
  .align-left {
    text-align: left;
  }
  .align-right {
    text-align: right;
  }
  .nopadding {
    padding: 0 !important;
  }

  //font style global classes
  .font.bold{
    font-weight: bold;
  }
  .font.normal{
    font-weight: normal;
  }

  .font.lighter{
    font-weight: lighter;
  }

  .font.italic{
    font-style: italic;
  }

  .underline{
    text-decoration: underline;
  }
  .no-underline{
    text-decoration: none;
  }

  //float
  .float.left{
    float: left;
  }
  .float.right{
    float: right;
  }
  //titles & descriptions
  .main-title h1{
    font-size: 30px;
    font-weight: lighter;
    text-align: center;
  }
    .main-title.black h1{
      color: #000;
    }
    .main-title.white h1{
      color: #fff;
    }
  .main-description{
    font-style: italic;
    font-weight: lighter;
    font-size: 20px;
    text-align: center;
  }
  //margin global classes
  //margin-allsides
  @for $i from 1 through 100 {
    .margin-a#{$i} { margin: 1px * $i; }
  }
    //old version classes
      $max: 100;
      $step: 5;

      @for $i from 0 through ceil($max/$step) {
        $value: ($i - 0)*$step + 0;
        .margin.a#{$value} {  margin:$value+px;}
      }
  //margin-top
  @for $i from 1 through 100 {
    .margin-t#{$i} { margin-top: 1px * $i; }
  }
      //old version classes

      @for $i from 0 through ceil($max/$step) {
        $value: ($i - 0)*$step + 0;
        .margin.t#{$value} {  margin-top:$value+px;}
      }
  //margin-bottom
  @for $i from 1 through 100 {
    .margin-b#{$i} { margin-bottom: 1px * $i; }
  }
    //old version classes
    @for $i from 0 through ceil($max/$step) {
      $value: ($i - 0)*$step + 0;
      .margin.b#{$value} {  margin-bottom:$value+px;}
    }
  //margin-left
  @for $i from 1 through 100 {
    .margin-l#{$i} { margin-left: 1px * $i; }
  }
    //old version classes
    @for $i from 0 through ceil($max/$step) {
      $value: ($i - 0)*$step + 0;
      .margin.l#{$value} {  margin-left:$value+px;}
    }
  //margin-right
    @for $i from 1 through 100 {
      .margin-r#{$i} { margin-right: 1px * $i; }
    }
      //old version classes
      @for $i from 0 through ceil($max/$step) {
        $value: ($i - 0)*$step + 0;
        .margin.r#{$value} {  margin-right:$value+px;}
      }
  //margin for child
  .element-margin.horizontal>a,
  .element-margin.horizontal>div{
    margin-left: 10px;
    margin-right: 10px;
  }
  .element-margin.vertical>a,
  .element-margin.vertical>div{
    margin-top: 10px;
    margin-bottom: 10px;
  }
  //padding global classes

  //padding-allsides
  @for $i from 1 through 100 {
    .padding#{$i} { padding: 1px * $i; }
  }
    //old version classes
    @for $i from 0 through ceil($max/$step) {
      $value: ($i - 0)*$step + 0;
      .padding#{$value} {  padding:$value+px;}
    }
  //padding-top
  @for $i from 1 through 100 {
    .padding-t#{$i} { padding-top: 1px * $i; }
  }
    //old version classes
    @for $i from 0 through ceil($max/$step) {
      $value: ($i - 0)*$step + 0;
      .padding.t#{$value} {  padding-top:$value+px;}
    }
  //padding-bottom
  @for $i from 1 through 100 {
    .padding-b#{$i} { padding-bottom: 1px * $i; }
  }
    //old version classes
    @for $i from 0 through ceil($max/$step) {
      $value: ($i - 0)*$step + 0;
      .padding.b#{$value} {  padding-bottom:$value+px;}
    }
  //padding-left
    @for $i from 1 through 100 {
      .padding-l#{$i} { padding-left: 1px * $i; }
    }
      //old version classes
      @for $i from 0 through ceil($max/$step) {
        $value: ($i - 0)*$step + 0;
        .padding.l#{$value} {  padding-left:$value+px;}
      }
  //padding-right
  @for $i from 1 through 100 {
    .padding-r#{$i} { padding-right: 1px * $i; }
  }
    //old version classes
    @for $i from 0 through ceil($max/$step) {
      $value: ($i - 0)*$step + 0;
      .padding.r#{$value} {  padding-right:$value+px;}
    }


/*end global classes*/
